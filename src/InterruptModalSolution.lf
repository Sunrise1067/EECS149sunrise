/**
 * Blink the default LED on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
 target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false
  }
  
  import Display from "lib/Display.lf"
  
  preamble {=
    #include <stdio.h>
    #include <pico/stdlib.h>
    #include <hardware/gpio.h>
    #define button_pin 25
  =}
  
  
  
  main reactor {

      d = new Display()
      timer t_up(0, 500 ms)
      timer t_down(0,1000 ms)
    //   state led_on: bool = false
        

      physical action button_press
      preamble{=
        static void* action = NULL;
        instant_t time=0;
        instant_t phys_time=0;
        static int counter = 0;
        void button_callback()
        {
            instant_t cur_phys_time= lf_time_physical();
            if ((cur_phys_time-phys_time)/1e9 >= 0.2)
            {
                lf_schedule(action, 0);
                phys_time = lf_time_physical();
            }
            
            
        }
      =}
      
    reaction(startup) -> button_press {=
        action = button_press;
        gpio_init(button_pin);
        gpio_set_dir(button_pin, GPIO_IN);
        // gpio_set_irq_enabled_with_callback (uint gpio, uint32_t event_mask, bool enabled, gpio_irq_callback_t callback)
        gpio_set_irq_enabled_with_callback(button_pin, GPIO_IRQ_EDGE_FALL, true, &button_callback);
        time = lf_time_logical();
        phys_time = lf_time_physical();
    =}

    initial mode up
    {
        reaction(button_press) -> down
        {=
            lf_set_mode(down);
        =}
        reaction (t_up) -> d.line0 {=
            counter ++;
            static char buf0[17];
            snprintf(buf0, 17, "count:%d", counter);
            lf_set(d.line0, buf0);
        =}
    }
    
    mode down
    {
        reaction(button_press) -> up
        {=
            lf_set_mode(up);
        =}
        reaction (t_down) -> d.line0 {=
            counter --;
            static char buf0[17];
            snprintf(buf0, 17, "count:%d", counter);
            lf_set(d.line0, buf0);
        =}
    }
  
    
  }
  